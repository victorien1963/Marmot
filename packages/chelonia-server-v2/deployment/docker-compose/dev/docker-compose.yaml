version: '3.8'
services:
  postgres:
    image: "postgres:15.3"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdat
    ports:
      - "${DB_EXTERNAL_PORT}:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  chelonia-server-v2-gunicorn:
    image: chelonia-server-v2-gunicorn
    build:
      context: ../../..
      dockerfile: "deployment/dockerfile/dev/chelonia_server_v2_gunicorn/Dockerfile"
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_HOST: postgres
      DB_PORT: 5432
      DEBUG: ${DEBUG}

      OBJECT_STORE_BUCKET: ${OBJECT_STORE_BUCKET}
      UPLOAD_EXPIRE: ${UPLOAD_EXPIRE}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}

      # set if using object store other than s3
      CUSTOM_OBJECT_STORE_TYPE: ${CUSTOM_OBJECT_STORE_TYPE}
      CUSTOM_OBJECT_STORE_ENDPOINT: ${CUSTOM_OBJECT_STORE_ENDPOINT}

      # super user account
      SUPER_USER: $SUPER_USER
      SUPER_USER_PASSWD: $SUPER_USER_PASSWD
    volumes:
      - ../../../chelonia_server_v2:/chelonia_server_v2
    depends_on:
      - postgres
      - minio
      - create-buckets
    links:
      - postgres
      - minio

  chelonia-server-v2-nginx:
    image: chelonia-server-v2-nginx
    build:
      context: ../../..
      dockerfile: "deployment/dockerfile/dev/chelonia_server_v2_nginx/Dockerfile"
    environment:
      CHELONIA_SERVER_V2_GUNICORN_HOST: chelonia-server-v2-gunicorn
      CHELONIA_SERVER_V2_GUNICORN_PORT: 8000

      NGINX_PORT: ${NGINX_PORT}
    ports:
      - "${NGINX_EXTERNAL_PORT}:${NGINX_PORT}"
    depends_on:
      - chelonia-server-v2-gunicorn

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio_storage:/data
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    command: server --console-address ":9001" /data

  create-buckets:
    image: minio/mc
    depends_on:
      - minio
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      OBJECT_STORE_BUCKET: ${OBJECT_STORE_BUCKET}
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      /usr/bin/mc mb myminio/${OBJECT_STORE_BUCKET};
      /usr/bin/mc policy download myminio/${OBJECT_STORE_BUCKET};
      exit 0;
      "